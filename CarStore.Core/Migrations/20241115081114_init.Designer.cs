// <auto-generated />
using System;
using CarStore.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarStore.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241115081114_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarStore.Core.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarId"));

                    b.Property<string>("DefautlImageLocation")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("EngineTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Images")
                        .HasColumnType("text");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long?>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("TypeOfCarId")
                        .HasColumnType("integer");

                    b.Property<string>("UsageStatus")
                        .HasColumnType("text");

                    b.HasKey("CarId");

                    b.HasIndex("EngineTypeId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("TypeOfCarId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarStore.Core.Models.EngineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EngineTypes");
                });

            modelBuilder.Entity("CarStore.Core.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("CarStore.Core.Models.TypeOfCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageLocation")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypeOfCars");
                });

            modelBuilder.Entity("CarStore.Core.Models.Variant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("variants");
                });

            modelBuilder.Entity("CarStore.Core.Models.VariantOfCar", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("integer");

                    b.Property<int>("VariantId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("CarId", "VariantId");

                    b.HasIndex("VariantId");

                    b.ToTable("variantsOfCars");
                });

            modelBuilder.Entity("CarStore.Core.Models.Car", b =>
                {
                    b.HasOne("CarStore.Core.Models.EngineType", "EngineType")
                        .WithMany("cars")
                        .HasForeignKey("EngineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarStore.Core.Models.Manufacturer", "Manufacturer")
                        .WithMany("cars")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarStore.Core.Models.TypeOfCar", "TypeOfCar")
                        .WithMany("cars")
                        .HasForeignKey("TypeOfCarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngineType");

                    b.Navigation("Manufacturer");

                    b.Navigation("TypeOfCar");
                });

            modelBuilder.Entity("CarStore.Core.Models.VariantOfCar", b =>
                {
                    b.HasOne("CarStore.Core.Models.Car", "Car")
                        .WithMany("VariantOfCars")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarStore.Core.Models.Variant", "Variant")
                        .WithMany("VariantOfCars")
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("CarStore.Core.Models.Car", b =>
                {
                    b.Navigation("VariantOfCars");
                });

            modelBuilder.Entity("CarStore.Core.Models.EngineType", b =>
                {
                    b.Navigation("cars");
                });

            modelBuilder.Entity("CarStore.Core.Models.Manufacturer", b =>
                {
                    b.Navigation("cars");
                });

            modelBuilder.Entity("CarStore.Core.Models.TypeOfCar", b =>
                {
                    b.Navigation("cars");
                });

            modelBuilder.Entity("CarStore.Core.Models.Variant", b =>
                {
                    b.Navigation("VariantOfCars");
                });
#pragma warning restore 612, 618
        }
    }
}
